MODEL: #MODEL field
    framework: "BMNLocalizer"
    backbone:
        name: "BMN"
        tscale: 100
        dscale: 100
        prop_boundary_ratio: 0.5
        num_sample: 32
        num_sample_perbin: 3
        feat_dim: 2048
    loss:
        name: "BMNLoss"
        tscale: 100
        dscale: 100

DATASET: #DATASET field
    batch_size: 16 #single card bacth size
    test_batch_size: 1
    num_workers: 8
    train:
        format: "BMNDataset"
        file_path: "/root/aistudio/data/new_label_cls14_train.json"
        subset: "train"
    valid:
        format: "BMNDataset"
        file_path: "/root/aistudio/data/new_label_cls14_train.json"
        subset: "validation"
    test:
        format: "BMNDataset"
        test_mode: True
        file_path: "/root/aistudio/data/new_label_cls14_train.json"
        subset: "validation"

PIPELINE: #PIPELINE field
    train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        load_feat:
            name: "LoadFeat"
            feat_path: "/root/aistudio/data/Features_competition_train/npy"
        transform: #Mandotary, image transfrom operator
        - GetMatchMap:
            tscale: 100
        - GetVideoLabel:
            tscale: 100
            dscale: 100

    valid: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        load_feat:
            name: "LoadFeat"
            feat_path: "/root/aistudio/data/Features_competition_train/npy"
        transform: #Mandotary, image transfrom operator
        - GetMatchMap:
            tscale: 100
        - GetVideoLabel:
            tscale: 100
            dscale: 100

    test: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
        load_feat:
            name: "LoadFeat"
            feat_path: "/root/aistudio/data/Features_competition_train/npy"
        transform: #Mandotary, image transfrom operator
        - GetMatchMap:
            tscale: 100
        - GetVideoLabel:
            tscale: 100
            dscale: 100

OPTIMIZER: #OPTIMIZER field
    name: 'Adamax' #Adam
    # learning_rate:
    #     iter_step: True
    #     name: 'CustomPiecewiseDecay'
    #     boundaries: [39000]
    #     values: [0.0005, 0.00005]
    learning_rate:
        iter_step: False
        name: 'CustomStepDecay'
        learning_rate: 0.001
        step_size: 15 # for each epoch
        gamma: 0.1
    weight_decay:
        name: 'L2'
        value: 1e-4

METRIC:
    name: 'BMNMetric'
    tscale: 100
    dscale: 100
    file_path: "data/bmn_data/activitynet_1.3_annotations.json"
    ground_truth_filename: "data/bmn_data/activity_net_1_3_new.json"
    subset: "validation"
    output_path: "data/bmn/BMN_Test_output"
    result_path: "data/bmn/BMN_Test_results"


INFERENCE:
    name: 'BMN_Inference_helper'
    feat_dim: 2048
    dscale: 100
    tscale: 100
    result_path: "data/bmn/BMN_INFERENCE_results"


model_name: BMN
epochs: 30 #Mandatory, total epoch
log_level: "INFO"
resume_from: "" #checkpoint path.

log_path: "log_BMN/log/"
